/**
 * [ ----------------------------------------------------------------------------------------------- ]
 * [ PLEASE NOTE: This program is a quick simple GUI for my firend to help visualizing math problems ]
 * [ ----------------------------------------------------------------------------------------------- ]
**/

var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
var canvas,scale=1,zoom,canvas_width,canvas_height,background_color="rgb(255, 255, 255)",brushSize=20,brushColor="rgb(0, 0, 0)",gridX=36,gridY=19,showGrid=!0,toolbarIsOpen=!1,brushoptionsIsOpen=!1,scale_slider,gridX_slider,gridY_slider,brush_slider,scale_slider_label,gridx_slider_label,gridy_slider_label,brush_slider_label,strokes=[],stroke_in_progress=[],undone_strokes=[],pencil_down=!1,colorsHidden=!0,optionsHidden=!0;
function updateCanvas(){if(scale_slider.value!=zoom||gridX_slider.value!=gridX||gridY_slider.value!=gridY)zoom=scale_slider.value,scale=zoom/20,gridX=gridX_slider.value,gridY=gridY_slider.value,canvas=resizeCanvas(gridX*zoom,gridY*zoom)}function drawGrid(){if(showGrid){stroke(200);strokeWeight(1);for(var a=width/gridX;a<width;a+=width/gridX)line(a,0,a,height);for(a=height/gridY;a<height;a+=height/gridY)line(0,a,width,a)}}
function mousePressed(){mouseButton===LEFT&&0<mouseX&&mouseX<width&&0<mouseY&&mouseY<height&&(pencil_down=!0)}function mouseReleased(){mouseButton===LEFT&&(pencil_down=!1)}
function drawStrokes(){for(var a=$jscomp.makeIterator(strokes),b=a.next();!b.done;b=a.next())for(finished_stroke=b.value,b=0;b<finished_stroke.length-1;b++)stroke(finished_stroke[b][4]),strokeWeight(finished_stroke[b][3]*scale),line(finished_stroke[b][0]*scale,finished_stroke[b][1]*scale,finished_stroke[b+1][0]*scale,finished_stroke[b+1][1]*scale);if(1<stroke_in_progress.length)for(a=0;a<stroke_in_progress.length-1;a++)stroke(stroke_in_progress[a][4]),strokeWeight(stroke_in_progress[a][3]*scale),
line(stroke_in_progress[a][0]*scale,stroke_in_progress[a][1]*scale,stroke_in_progress[a+1][0]*scale,stroke_in_progress[a+1][1]*scale);pencil_down?toolbarIsOpen||brushoptionsIsOpen?0<stroke_in_progress.length&&(strokes.push(stroke_in_progress),stroke_in_progress=[]):stroke_in_progress.push([mouseX/scale,mouseY/scale,scale,brushSize,brushColor]):!pencil_down&&0<stroke_in_progress.length&&0<stroke_in_progress.length&&(strokes.push(stroke_in_progress),stroke_in_progress=[])}
function toggleToolbar(){toolbarIsOpen=!toolbarIsOpen}function toggleBrushOptions(){brushoptionsIsOpen=!brushoptionsIsOpen}function toggleGrid(){showGrid=!showGrid}function updateSliders(){scale_slider_label.innerHTML="Zoom    "+parseFloat(scale_slider.value).toFixed(1);gridx_slider_label.innerHTML="Width   "+parseInt(gridX_slider.value);gridy_slider_label.innerHTML="Height  "+parseInt(gridY_slider.value)}
function updateBrush(){brushSize=brush_slider.value;brush_slider_label.innerHTML="Brush size  "+brushSize}function setColor(a){brushColor=a}function undo(){0<strokes.length&&(undone_strokes.push(strokes[strokes.length-1]),strokes.pop())}function redo(){0<undone_strokes.length&&(strokes.push(undone_strokes[undone_strokes.length-1]),undone_strokes.pop())}function clearScreen(){strokes=[];stroke_in_progress=[];undone_strokes=[];pencil_down=!1}
function showOptions(){optionsHidden&&toolbarIsOpen?(document.getElementById("toolbar-container").style.display="block",optionsHidden=!1):optionsHidden||toolbarIsOpen||setTimeout(function(){document.getElementById("toolbar-container").style.display="none";optionsHidden=!0},400)}
function showColors(){colorsHidden&&brushoptionsIsOpen?(document.getElementById("colorpalette").style.display="grid",colorsHidden=!1):colorsHidden||brushoptionsIsOpen||setTimeout(function(){document.getElementById("colorpalette").style.display="none";colorsHidden=!0},400)}function saveSheet(){html2canvas(document.getElementById("sheet")).then(function(a){a=a.toDataURL("image/png");var b=getFileName();void 0!=b&&download(a,b)})}
function getFileName(){var a=prompt("Please give a name for your sheet. It will be saved in PNG format (default: pixelsheet-unnamed-sheet.png)");if(null!=a)return""!=a?(".png"!=a.substr(a.length-4)&&(a+=".png"),a):"pixelsheet-unnamed-sheet.png"}function download(a,b){var c=document.createElement("a");"string"===typeof c.download?(c.href=a,c.download=b,document.body.appendChild(c),c.click(),document.body.removeChild(c)):window.open(a)}
function setup(){frameRate(60);canvas_height=canvas_width=windowWidth/2;canvas=createCanvas(gridX*zoom,gridY*zoom);canvas.id("sheet");scale_slider=document.getElementById("scale-slider");gridX_slider=document.getElementById("gridx-slider");gridY_slider=document.getElementById("gridy-slider");brush_slider=document.getElementById("brush-slider");scale_slider_label=document.getElementById("scale-slider-label");gridx_slider_label=document.getElementById("gridx-slider-label");gridy_slider_label=document.getElementById("gridy-slider-label");
brush_slider_label=document.getElementById("brush-slider-label")}function draw(){background(background_color);updateCanvas();drawGrid();drawStrokes();updateBrush();updateSliders();showColors();showOptions()};
